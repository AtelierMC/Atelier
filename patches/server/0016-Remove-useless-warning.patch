From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: JustMangoT <38831897+JustMangoT@users.noreply.github.com>
Date: Thu, 3 Mar 2022 13:07:35 +0700
Subject: [PATCH] Remove useless warning


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 119989e11c2e11aceaddec507f15d0260fba648a..2f20e0089c94f63792adc8dae9aee4f6a4b3791c 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -326,6 +326,8 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
 
         if (!this.usesAuthentication()) {
             DedicatedServer.LOGGER.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
+            // Atelier start - Remove useless warning
+            /*
             DedicatedServer.LOGGER.warn("The server will make no attempt to authenticate usernames. Beware.");
             // Spigot start
             if (com.destroystokyo.paper.PaperConfig.isProxyOnlineMode()) { // Purpur
@@ -337,6 +339,8 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             }
             // Spigot end
             DedicatedServer.LOGGER.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
+            */
+            // Atelier
         }
 
 
diff --git a/src/main/java/net/minecraft/stats/ServerStatsCounter.java b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
index c59f98ca3adfdd90cdc5999aeadbb0834efedc0f..889fcdd41c0b49f2d53245e92736ba0a619548a6 100644
--- a/src/main/java/net/minecraft/stats/ServerStatsCounter.java
+++ b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
@@ -134,15 +134,15 @@ public class ServerStatsCounter extends StatsCounter {
                                             Util.ifElse(this.getStat(statisticwrapper, s2), (statistic) -> {
                                                 this.stats.put(statistic, nbttagcompound2.getInt(s2));
                                             }, () -> {
-                                                ServerStatsCounter.LOGGER.warn("Invalid statistic in {}: Don't know what {} is", this.file, s2);
+                                                // ServerStatsCounter.LOGGER.warn("Invalid statistic in {}: Don't know what {} is", this.file, s2); // Atelier
                                             });
                                         } else {
-                                            ServerStatsCounter.LOGGER.warn("Invalid statistic value in {}: Don't know what {} is for key {}", new Object[]{this.file, nbttagcompound2.get(s2), s2});
+                                            // ServerStatsCounter.LOGGER.warn("Invalid statistic value in {}: Don't know what {} is for key {}", new Object[]{this.file, nbttagcompound2.get(s2), s2}); // Atelier
                                         }
                                     }
 
                                 }, () -> {
-                                    ServerStatsCounter.LOGGER.warn("Invalid statistic type in {}: Don't know what {} is", this.file, s1);
+                                    // ServerStatsCounter.LOGGER.warn("Invalid statistic type in {}: Don't know what {} is", this.file, s1); // Atelier
                                 });
                             }
                         }
